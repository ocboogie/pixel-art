// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ocboogie/pixel-art/services/avatar (interfaces: Service)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/ocboogie/pixel-art/models"
	reflect "reflect"
)

// ServiceAvatar is a mock of Service interface
type ServiceAvatar struct {
	ctrl     *gomock.Controller
	recorder *ServiceAvatarMockRecorder
}

// ServiceAvatarMockRecorder is the mock recorder for ServiceAvatar
type ServiceAvatarMockRecorder struct {
	mock *ServiceAvatar
}

// NewServiceAvatar creates a new mock instance
func NewServiceAvatar(ctrl *gomock.Controller) *ServiceAvatar {
	mock := &ServiceAvatar{ctrl: ctrl}
	mock.recorder = &ServiceAvatarMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *ServiceAvatar) EXPECT() *ServiceAvatarMockRecorder {
	return m.recorder
}

// Format mocks base method
func (m *ServiceAvatar) Format() models.AvatarFormat {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Format")
	ret0, _ := ret[0].(models.AvatarFormat)
	return ret0
}

// Format indicates an expected call of Format
func (mr *ServiceAvatarMockRecorder) Format() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Format", reflect.TypeOf((*ServiceAvatar)(nil).Format))
}

// GenerateRandom mocks base method
func (m *ServiceAvatar) GenerateRandom() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateRandom")
	ret0, _ := ret[0].(string)
	return ret0
}

// GenerateRandom indicates an expected call of GenerateRandom
func (mr *ServiceAvatarMockRecorder) GenerateRandom() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateRandom", reflect.TypeOf((*ServiceAvatar)(nil).GenerateRandom))
}

// Validate mocks base method
func (m *ServiceAvatar) Validate(arg0 string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate", arg0)
	ret0, _ := ret[0].(bool)
	return ret0
}

// Validate indicates an expected call of Validate
func (mr *ServiceAvatarMockRecorder) Validate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*ServiceAvatar)(nil).Validate), arg0)
}
