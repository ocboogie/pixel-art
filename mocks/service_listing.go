// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ocboogie/pixel-art/services/listing (interfaces: Service)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/ocboogie/pixel-art/models"
	reflect "reflect"
)

// ServiceListing is a mock of Service interface
type ServiceListing struct {
	ctrl     *gomock.Controller
	recorder *ServiceListingMockRecorder
}

// ServiceListingMockRecorder is the mock recorder for ServiceListing
type ServiceListingMockRecorder struct {
	mock *ServiceListing
}

// NewServiceListing creates a new mock instance
func NewServiceListing(ctrl *gomock.Controller) *ServiceListing {
	mock := &ServiceListing{ctrl: ctrl}
	mock.recorder = &ServiceListingMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *ServiceListing) EXPECT() *ServiceListingMockRecorder {
	return m.recorder
}

// Latest mocks base method
func (m *ServiceListing) Latest() ([]*models.Post, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Latest")
	ret0, _ := ret[0].([]*models.Post)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Latest indicates an expected call of Latest
func (mr *ServiceListingMockRecorder) Latest() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Latest", reflect.TypeOf((*ServiceListing)(nil).Latest))
}
