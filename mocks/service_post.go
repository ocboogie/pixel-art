// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ocboogie/pixel-art/services/post (interfaces: Service)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/ocboogie/pixel-art/models"
	reflect "reflect"
)

// ServicePost is a mock of Service interface
type ServicePost struct {
	ctrl     *gomock.Controller
	recorder *ServicePostMockRecorder
}

// ServicePostMockRecorder is the mock recorder for ServicePost
type ServicePostMockRecorder struct {
	mock *ServicePost
}

// NewServicePost creates a new mock instance
func NewServicePost(ctrl *gomock.Controller) *ServicePost {
	mock := &ServicePost{ctrl: ctrl}
	mock.recorder = &ServicePostMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *ServicePost) EXPECT() *ServicePostMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *ServicePost) Create(arg0 models.PostInput) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *ServicePostMockRecorder) Create(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*ServicePost)(nil).Create), arg0)
}
